---
AWSTemplateFormatVersion: 2010-09-09
Description: "Launch Amazon EKS in Shared VPC Subnets"

Parameters:
  NamingPrefix:
    Type: String
    Description: The naming prefix for resources created by this template, and exported values that can be referenced by other stacks.
    Default: EKSDemo
  VPCIPv4CidrBlock:
    Description: VPC CIDR block for IPv4. Default of 10.0.0.0/16 is recommended for testing.
    Type: String
    Default: 10.0.0.0/16
  VPCSubnetIPv4Size:
    Description: Host bit mask length of each subnet, e.g. default of 8 will be a /24 subnet size.
    Type: Number
    Default: 8
  VPCNumberOfIPv4Subnets:
    Description: Number of equally sized IPv4 subnets that will be created within the VPC CIDR block. Default of 256 is recommended for testing.
    Type: Number
    Default: 256
  Share2Principal:
    Description: Enter AWS account ID, ARN of an AWS Org, ARN of an OU in AWS Org
    Type: String

Resources:
  #
  #VPC
  #
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html
      CidrBlock: !Ref VPCIPv4CidrBlock
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref NamingPrefix
              - VPC
  IGW:
    #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-internetgateway.html
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref NamingPrefix
              - IGW
  IGWAttach:
    #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref IGW
      #VpnGatewayId

  InternetRoute:
    Type: 'AWS::EC2::Route'
    #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW
      RouteTableId: !Ref InternetRouteTable

  InternetRouteTable:
    #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route-table.html
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref NamingPrefix
              - Public
              - RTB

  #
  #Public Subnets:
  #
  PublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html
    Properties:
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      CidrBlock: !Select [ 1, Fn::Cidr: [ !GetAtt VPC.CidrBlock, !Ref VPCNumberOfIPv4Subnets, !Ref VPCSubnetIPv4Size ]]
      Tags:
        - Key: Name
          Value: !Sub '${NamingPrefix}-Public-a'
      VpcId: !Ref VPC

  PublicSubnet2:
    Type: 'AWS::EC2::Subnet'
    #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html
    Properties:
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref 'AWS::Region'
      CidrBlock: !Select [ 2, Fn::Cidr: [ !GetAtt VPC.CidrBlock, !Ref VPCNumberOfIPv4Subnets, !Ref VPCSubnetIPv4Size ]]
      Tags:
        - Key: Name
          Value: !Sub '${NamingPrefix}-Public-b'
      VpcId: !Ref VPC

  PublicSubnet3:
    Type: 'AWS::EC2::Subnet'
    #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html
    Properties:
      AvailabilityZone: !Select
        - 2
        - Fn::GetAZs: !Ref 'AWS::Region'
      CidrBlock: !Select [ 3, Fn::Cidr: [ !GetAtt VPC.CidrBlock, !Ref VPCNumberOfIPv4Subnets, !Ref VPCSubnetIPv4Size ]]
      Tags:
        - Key: Name
          Value: !Sub '${NamingPrefix}-Public-c'
      VpcId: !Ref VPC

  PublicSubnet1RouteToInternet:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-route-table-assoc.html
    DependsOn:
      - PublicSubnet1
      - InternetRouteTable
    Properties:
      RouteTableId: !Ref InternetRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteToInternet:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-route-table-assoc.html
    DependsOn:
      - PublicSubnet2
      - InternetRouteTable
    Properties:
      RouteTableId: !Ref InternetRouteTable
      SubnetId: !Ref PublicSubnet2

  PublicSubnet3RouteToInternet:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-route-table-assoc.html
    DependsOn:
      - PublicSubnet3
      - InternetRouteTable
    Properties:
      RouteTableId: !Ref InternetRouteTable
      SubnetId: !Ref PublicSubnet3

  NAT1EIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  NAT1GW:
    Type: AWS::EC2::NatGateway
    Properties: 
      AllocationId:
        Fn::GetAtt:
          - NAT1EIP
          - AllocationId
      SubnetId:
        Ref: PublicSubnet1
      Tags:
        - Key: Name
          Value: !Sub '${NamingPrefix}-natgw-a'

  PrivateRouteTable:
    #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route-table.html
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref NamingPrefix
              - Private
              - RTB
  
  NATRoute:
    Type: 'AWS::EC2::Route'
    #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NAT1GW
      RouteTableId: !Ref PrivateRouteTable

  #
  #Private Subnets:
  #
  PrivateSubnet1:
    Type: 'AWS::EC2::Subnet'
    #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html
    Properties:
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      CidrBlock: !Select [ 4, Fn::Cidr: [ !GetAtt VPC.CidrBlock, !Ref VPCNumberOfIPv4Subnets, !Ref VPCSubnetIPv4Size ]]
      Tags:
        - Key: Name
          Value: !Sub '${NamingPrefix}-Private-a'
      VpcId: !Ref VPC

  PrivateSubnet2:
    Type: 'AWS::EC2::Subnet'
    #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html
    Properties:
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref 'AWS::Region'
      CidrBlock: !Select [ 5, Fn::Cidr: [ !GetAtt VPC.CidrBlock, !Ref VPCNumberOfIPv4Subnets, !Ref VPCSubnetIPv4Size ]]
      Tags:
        - Key: Name
          Value: !Sub '${NamingPrefix}-Private-b'
      VpcId: !Ref VPC

  PrivateSubnet3:
    Type: 'AWS::EC2::Subnet'
    #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html
    Properties:
      AvailabilityZone: !Select
        - 2
        - Fn::GetAZs: !Ref 'AWS::Region'
      CidrBlock: !Select [ 6, Fn::Cidr: [ !GetAtt VPC.CidrBlock, !Ref VPCNumberOfIPv4Subnets, !Ref VPCSubnetIPv4Size ]]
      Tags:
        - Key: Name
          Value: !Sub '${NamingPrefix}-Private-c'
      VpcId: !Ref VPC

  PrivateSubnet1RouteToInternet:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-route-table-assoc.html
    DependsOn:
      - PrivateSubnet1
      - PrivateRouteTable
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet1

  PrivateSubnet2RouteToInternet:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-route-table-assoc.html
    DependsOn:
      - PrivateSubnet2
      - PrivateRouteTable
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet2

  PrivateSubnet3RouteToInternet:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-route-table-assoc.html
    DependsOn:
      - PrivateSubnet3
      - PrivateRouteTable
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet3

  #
  #Control Plane Subnets:
  #
  CPSubnet1:
    Type: 'AWS::EC2::Subnet'
    #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html
    Properties:
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      CidrBlock: !Select [ 7, Fn::Cidr: [ !GetAtt VPC.CidrBlock, !Ref VPCNumberOfIPv4Subnets, 4 ]]
      Tags:
        - Key: Name
          Value: !Sub '${NamingPrefix}-CP-a'
      VpcId: !Ref VPC

  CPSubnet2:
    Type: 'AWS::EC2::Subnet'
    #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html
    Properties:
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref 'AWS::Region'
      CidrBlock: !Select [ 8, Fn::Cidr: [ !GetAtt VPC.CidrBlock, !Ref VPCNumberOfIPv4Subnets, 4 ]]
      Tags:
        - Key: Name
          Value: !Sub '${NamingPrefix}-CP-b'
      VpcId: !Ref VPC

  CPSubnet3:
    Type: 'AWS::EC2::Subnet'
    #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html
    Properties:
      AvailabilityZone: !Select
        - 2
        - Fn::GetAZs: !Ref 'AWS::Region'
      CidrBlock: !Select [ 9, Fn::Cidr: [ !GetAtt VPC.CidrBlock, !Ref VPCNumberOfIPv4Subnets, 4 ]]
      Tags:
        - Key: Name
          Value: !Sub '${NamingPrefix}-CP-c'
      VpcId: !Ref VPC

  CPSubnet1RouteToInternet:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-route-table-assoc.html
    DependsOn:
      - CPSubnet1
      - PrivateRouteTable
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref CPSubnet1

  CPSubnet2RouteToInternet:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-route-table-assoc.html
    DependsOn:
      - CPSubnet2
      - PrivateRouteTable
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref CPSubnet2

  CPSubnet3RouteToInternet:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-route-table-assoc.html
    DependsOn:
      - CPSubnet3
      - PrivateRouteTable
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref CPSubnet3

  #
  # RAM 
  #
  SubnetRAMShare:
    Type: AWS::RAM::ResourceShare
    Properties: 
      AllowExternalPrincipals: false
      Name: !Sub '${NamingPrefix}-resource-share'
      Principals: 
        - !Ref Share2Principal
      ResourceArns: 
        - !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:subnet/${CPSubnet1}"
        - !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:subnet/${CPSubnet2}"
        - !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:subnet/${CPSubnet3}"
        - !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:subnet/${PrivateSubnet1}"
        - !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:subnet/${PrivateSubnet2}"
        - !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:subnet/${PrivateSubnet3}"
        - !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:subnet/${PublicSubnet1}"
        - !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:subnet/${PublicSubnet2}"
        - !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:subnet/${PublicSubnet3}"

Outputs:
  EKSDemoVPC:
    Description: EKSDemoVPC
    Value: !Ref VPC
    Export:
      Name: !Sub '${AWS::StackName}'

  #PrivateSubnets:
  PrivateSubnet1:
    Description: PrivateSubnet1
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub '${AWS::StackName}-PrivateSubnet1'
  PrivateSubnet2:
    Description: PrivateSubnet2
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub '${AWS::StackName}-PrivateSubnet2'
  PrivateSubnet3:
    Description: PrivateSubnet3
    Value: !Ref PrivateSubnet3
    Export:
      Name: !Sub '${AWS::StackName}-PrivateSubnet3'

  #PublicSubnets:
  PublicSubnet1:
    Description: PublicSubnet1
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub '${AWS::StackName}-PublicSubnet1'
  PublicSubnet2:
    Description: PublicSubnet2
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub '${AWS::StackName}-PublicSubnet2'
  PublicSubnet3:
    Description: PublicSubnet3
    Value: !Ref PublicSubnet3
    Export:
      Name: !Sub '${AWS::StackName}-PublicSubnet3'

  #CPSubnets:
  CPSubnet1:
    Description: CPSubnet1
    Value: !Ref CPSubnet1
    Export:
      Name: !Sub '${AWS::StackName}-CPSubnet1'
  CPSubnet2:
    Description: CPSubnet2
    Value: !Ref CPSubnet2
    Export:
      Name: !Sub '${AWS::StackName}-CPSubnet2'
  CPSubnet3:
    Description: CPSubnet3
    Value: !Ref CPSubnet3
    Export:
      Name: !Sub '${AWS::StackName}-CPSubnet3'
